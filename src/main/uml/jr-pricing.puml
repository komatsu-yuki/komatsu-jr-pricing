@startuml
skinparam linetype ortho

package boarding {
    package date {
        class BoardingDate
    }
    package section {
        class BoardingSection
    }
}

package oneWayFare {
    package unit {
        interface FareUnit
        class FareYen implements FareUnit
    }

    package basic {
        class BasicFare
        class BasicFareYen implements FareUnit
    }
    package surchage.superexpress {
        interface SuperExpressSurcharge
        class SuperExpressSurchargeYen implements FareUnit
    }

    package total {
        interface TotalFare

        interface Discount

        package ordinary {

            package one.way {
                class OneWayFare implements TotalFare

                package child {
                    class ChildFare implements TotalFare
                }
            }
            package round.trip {
                class RoundTripFare implements TotalFare
                class RoundTripDiscount implements Discount
            }

        }

        package group {
            class GroupFare implements TotalFare
            class GroupDiscount implements Discount
        }

    }
}


BasicFareYen <|--- total
SuperExpressSurchargeYen <|--- total


TotalFare -[hidden]- Discount

Discount -[hidden]-- ordinary
Discount -[hidden]-- group

RoundTripFare o-- RoundTripDiscount
GroupFare o-- GroupDiscount





interface FareUnit {
    + plus()
    + minus()
    + times()
}

class BasicFareYen {
    - fareYen
}

class BasicFare {
    + getBasicFareYen()
}

interface SuperExpressSurcharge {
    + calculateSuperExpressSurchargeYen()
}

class SuperExpressSurchargeYen {
    - fareYen
}

interface TotalFare {
    + getBasicFareYen()
    + getSuperExpressSurchargeYen()
}

class OneWayFare {
    - basicFareYen
    - superExpressSurchargeYen
}

interface Discount {
    + isAvailable()
    + discountBasicFareYen()
    + discountSuperExpressSurchargeYen()
}

@enduml