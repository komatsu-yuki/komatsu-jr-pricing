@startuml
skinparam linetype ortho

package boarding {
    package date {
        class BoardingDate
    }
    package section {
        class BoardingSection
    }
}

package ordinaryFare {
    package unit {
        interface FareUnit
        class FareYen implements FareUnit
    }

    package basic {
        class BasicFare
        class BasicFareYen implements FareUnit
    }
    package surchage.superexpress {
        interface SuperExpressSurcharge
        class SuperExpressSurchargeYen implements FareUnit
    }

    package total {
        interface TotalFare
        class OrdinaryFare implements TotalFare

        package child {
            class ChildFare implements TotalFare
        }

        package discount {
            class DiscountedFare implements TotalFare
            interface Discount
        }
    }
}


BasicFareYen <|--- total
SuperExpressSurchargeYen <|--- total
OrdinaryFare -o ChildFare
DiscountedFare o- Discount




interface FareUnit {
    + plus()
    + minus()
    + times()
}

class BasicFareYen {
    - fareYen
}

class BasicFare {
    + getBasicFareYen()
}

interface SuperExpressSurcharge {
    + calculateSuperExpressSurchargeYen()
}

class SuperExpressSurchargeYen {
    - fareYen
}

interface TotalFare {
    + getBasicFareYen()
    + getSuperExpressSurchargeYen()
}

class OrdinaryFare {
    - basicFareYen
    - superExpressSurchargeYen
}


class ChildFare {
    - ordinaryFare
}

class DiscountedFare {
    - totalFare
    - discount
}

interface Discount {
    + isAvailable()
    + discountBasicFareYen()
    + discountSuperExpressSurchargeYen()
}

@enduml