@startuml
skinparam linetype ortho

package boarding {
    package date {
        class BoardingDate
    }
    package section {
        class BoardingSection
    }
}

package ordinaryFare {
    package unit {
        interface FareUnit
        class FareYen implements FareUnit
    }

    package total {
        interface TotalFare
        class Fare implements TotalFare
    }

    package basic {
        class BasicFare
        class BasicFareYen implements FareUnit
    }
    package surchage.superexpress {
        interface SuperExpressSurcharge
        class SuperExpressSurchargeYen implements FareUnit
    }

    package child {
        class ChildFare implements TotalFare
    }

    package discount {
        class DiscountedFare implements TotalFare
        interface Discount
    }
}


basic <|--- total
surchage.superexpress <|--- total

DiscountedFare o- Discount

total -[hidden]-- child
total -[hidden]-- discount



interface FareUnit {
    + plus()
    + minus()
    + times()
}

class BasicFareYen {
    - fareYen
}

class BasicFare {
    + getBasicFareYen()
}

interface SuperExpressSurcharge {
    + calculateSuperExpressSurchargeYen()
}

class SuperExpressSurchargeYen {
    - fareYen
}

interface TotalFare {
    + getBasicFareYen()
    + getSuperExpressSurchargeYen()
}

class Fare {
    - basicFareYen
    - superExpressSurchargeYen
}


class ChildFare {
    - ordinaryFare
}

class DiscountedFare {
    - ordinaryFare
    -discount
}

interface Discount {
    + isAvailable()
    + discountBasicFareYen()
    + discountSuperExpressSurchargeYen()
}

@enduml